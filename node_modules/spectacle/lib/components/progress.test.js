"use strict";

var _jsx2 = require("babel-runtime/helpers/jsx");

var _jsx3 = _interopRequireDefault(_jsx2);

var _progress = require("./progress");

var _progress2 = _interopRequireDefault(_progress);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _enzyme = require("enzyme");

var _enzymeToJson = require("enzyme-to-json");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _ref = (0, _jsx3.default)("div", {}, void 0, "Slide Content");

var _mockSlides = function _mockSlides() {
  var Slide = function Slide() {
    return _ref;
  };
  return [(0, _jsx3.default)(Slide, {}, 0), (0, _jsx3.default)(Slide, {}, 1), (0, _jsx3.default)(Slide, {}, 2)];
};

describe("<Progress />", function () {
  test("should render PacMan correctly", function () {
    var context = { styles: { progress: { pacman: [] } } };
    var wrapper = (0, _enzyme.mount)((0, _jsx3.default)(_progress2.default, {
      type: "pacman",
      items: _mockSlides(),
      currentSlide: 2
    }), { context: context });
    expect((0, _enzymeToJson.mountToJson)(wrapper)).toMatchSnapshot();
  });

  test("should render the number style correctly", function () {
    var context = { styles: { progress: { number: [] } } };
    var wrapper = (0, _enzyme.mount)((0, _jsx3.default)(_progress2.default, {
      type: "number",
      items: _mockSlides(),
      currentSlide: 1
    }), { context: context });
    expect((0, _enzymeToJson.mountToJson)(wrapper)).toMatchSnapshot();
  });

  test("should render the bar style correctly", function () {
    var context = { styles: { progress: { bar: [] } } };
    var wrapper = (0, _enzyme.mount)((0, _jsx3.default)(_progress2.default, {
      type: "bar",
      items: _mockSlides(),
      currentSlide: 1
    }), { context: context });
    expect((0, _enzymeToJson.mountToJson)(wrapper)).toMatchSnapshot();
  });

  test("should render nothing when none is provided.", function () {
    var context = { styles: { progress: {} } };
    var wrapper = (0, _enzyme.mount)((0, _jsx3.default)(_progress2.default, {
      type: "none",
      items: _mockSlides(),
      currentSlide: 3
    }), { context: context });
    expect((0, _enzymeToJson.mountToJson)(wrapper)).toMatchSnapshot();
  });
});
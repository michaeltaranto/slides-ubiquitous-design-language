'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function calculateBackground(type, lineHeight, color) {
  if (type === 'line') {
    var percentage = (lineHeight - 1) / lineHeight * 100;

    return {
      backgroundSize: '100% ' + lineHeight + 'px',
      backgroundImage: 'linear-gradient(to bottom, transparent 0%, transparent ' + percentage + '%, ' + color + ' ' + percentage + '%, ' + color + ' 100%)'
    };
  }

  return {
    backgroundSize: '100% ' + lineHeight * 2 + 'px',
    backgroundImage: 'linear-gradient(to bottom, ' + color + ' 50%, transparent 50%, transparent 100%)'
  };
}

function Baseline(props) {
  var isVisible = props.isVisible;
  var type = props.type;
  var lineHeight = props.lineHeight;
  var color = props.color;
  var children = props.children;
  var style = props.style;

  var restProps = _objectWithoutProperties(props, ['isVisible', 'type', 'lineHeight', 'color', 'children', 'style']);

  var baselineStyle = _extends({
    position: 'absolute',
    top: 0,
    left: 0,
    bottom: 0,
    right: 0,
    pointerEvents: 'none'
  }, calculateBackground(type, lineHeight, color));
  var rootProps = _extends({}, restProps, {
    style: _extends({}, style, { position: 'relative' })
  });

  return _react2.default.createElement(
    'div',
    rootProps,
    isVisible && _react2.default.createElement('div', { style: baselineStyle }),
    _react.Children.only(children)
  );
}

Baseline.propTypes = {
  isVisible: _react.PropTypes.bool,
  type: _react.PropTypes.string,
  lineHeight: _react.PropTypes.number,
  color: _react.PropTypes.string,
  children: _react.PropTypes.node.isRequired,
  style: _react.PropTypes.object
};

Baseline.defaultProps = {
  isVisible: true,
  type: 'line',
  lineHeight: 9,
  color: 'rgba(0, 0, 0, 0.15)',
  style: {}
};

exports.default = Baseline;

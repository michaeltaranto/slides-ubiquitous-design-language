Object.defineProperty(exports,"__esModule",{value:true});var _identity2=require("lodash/identity");var _identity3=_interopRequireDefault(_identity2);var _defaults2=require("lodash/defaults");var _defaults3=_interopRequireDefault(_defaults2);var _assign2=require("lodash/assign");var _assign3=_interopRequireDefault(_assign2);exports.











































































getInitialTransitionState=getInitialTransitionState;exports.



























































































































































































































getTransitionPropsFactory=getTransitionPropsFactory;var _react=require("react");var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function getDatumKey(datum,idx){return(datum.key||idx).toString();}function getKeyedData(data){return data.reduce(function(keyedData,datum,idx){var key=getDatumKey(datum,idx);keyedData[key]=datum;return keyedData;},{});}function getKeyedDataDifference(a,b){var hasDifference=false;var difference=Object.keys(a).reduce(function(_difference,key){if(!(key in b)){hasDifference=true;_difference[key]=true;}return _difference;},{});return hasDifference&&difference;}function getNodeTransitions(oldData,nextData){var oldDataKeyed=oldData&&getKeyedData(oldData);var nextDataKeyed=nextData&&getKeyedData(nextData);return{entering:oldDataKeyed&&getKeyedDataDifference(nextDataKeyed,oldDataKeyed),exiting:nextDataKeyed&&getKeyedDataDifference(oldDataKeyed,nextDataKeyed)};}function getChildData(child){if(child.type&&child.type.getData){return child.type.getData(child.props);}return child.props&&child.props.data||false;}function getInitialTransitionState(oldChildren,nextChildren){var nodesWillExit=false;var nodesWillEnter=false;var getTransition=function getTransition(oldChild,newChild){if(!newChild||oldChild.type!==newChild.type){return{};}var _ref=getNodeTransitions(getChildData(oldChild),getChildData(newChild))||{},entering=_ref.entering,exiting=_ref.exiting;nodesWillExit=nodesWillExit||!!exiting;nodesWillEnter=nodesWillEnter||!!entering;return{entering:entering||false,exiting:exiting||false};};var getTransitionsFromChildren=function getTransitionsFromChildren(old,next){return old.map(function(child,idx){if(child&&child.props&&child.props.children){return getTransitionsFromChildren(_react2.default.Children.toArray(old[idx].props.children),_react2.default.Children.toArray(next[idx].props.children));}return getTransition(child,next[idx]);});};var childrenTransitions=getTransitionsFromChildren(_react2.default.Children.toArray(oldChildren),_react2.default.Children.toArray(nextChildren));return{nodesWillExit:nodesWillExit,nodesWillEnter:nodesWillEnter,childrenTransitions:childrenTransitions,nodesShouldEnter:false,nodesShouldLoad:false,nodesDoneLoad:false,nodesDoneClipPathLoad:false,nodesDoneClipPathEnter:false,nodesDoneClipPathExit:false,animating:nodesWillExit||nodesWillEnter||childrenTransitions.length>0};}function getInitialChildProps(animate,data){var after=animate.onEnter&&animate.onEnter.after?animate.onEnter.after:_identity3.default;return{data:data.map(function(datum){return(0,_assign3.default)({},datum,after(datum));})};}function getChildBeforeLoad(animate,child,data,cb){var before=animate.onLoad&&animate.onLoad.before?animate.onLoad.before:_identity3.default;var beforeClipPathWidth=animate.onLoad&&animate.onLoad.beforeClipPathWidth;data=data.map(function(datum){return(0,_assign3.default)({},datum,before(datum));});if(beforeClipPathWidth){var _beforeClipPathWidth=beforeClipPathWidth(data,child,animate),clipWidth=_beforeClipPathWidth.clipWidth,translateX=_beforeClipPathWidth.translateX;return{animate:animate,data:data,clipWidth:clipWidth,translateX:translateX,cb:cb};}return{animate:animate,data:data,cb:cb};}function getChildOnLoad(animate,data,cb){animate=(0,_assign3.default)({},animate,{onEnd:cb});var after=animate.onLoad&&animate.onLoad.after?animate.onLoad.after:_identity3.default;data=data.map(function(datum){return(0,_assign3.default)({},datum,after(datum));});return{animate:animate,data:data};}function getChildClipPathToLoad(animate,child,data,cb){animate=(0,_assign3.default)({},animate,{onEnd:cb});var afterClipPathWidth=animate.onLoad&&animate.onLoad.afterClipPathWidth;if(afterClipPathWidth){var _afterClipPathWidth=afterClipPathWidth(data,child,animate),clipWidth=_afterClipPathWidth.clipWidth,translateX=_afterClipPathWidth.translateX;return{animate:animate,clipWidth:clipWidth,translateX:translateX};}return{animate:animate};}function getChildClipPathToExit(animate,child,data,exitingNodes,cb){if(exitingNodes){animate=(0,_assign3.default)({},animate,{onEnd:cb});var beforeClipPathWidth=animate.onExit&&animate.onExit.beforeClipPathWidth;if(beforeClipPathWidth){var clipWidth=beforeClipPathWidth(data,child,exitingNodes);return{animate:animate,clipWidth:clipWidth};}}return{animate:animate};}function getChildPropsOnExit(animate,child,data,exitingNodes,cb){var onExit=animate&&animate.onExit;var beforeClipPathWidth=animate.onExit&&animate.onExit.beforeClipPathWidth;animate=(0,_assign3.default)({},animate,onExit);if(exitingNodes){var _ret=function(){animate.onEnd=cb;var before=animate.onExit&&animate.onExit.before?animate.onExit.before:_identity3.default;data=data.map(function(datum,idx){var key=(datum.key||idx).toString();return exitingNodes[key]?(0,_assign3.default)({},datum,before(datum)):datum;});if(beforeClipPathWidth){var clipWidth=beforeClipPathWidth(data,child,exitingNodes);return{v:{animate:animate,data:data,clipWidth:clipWidth}};}}();if(typeof _ret==="object")return _ret.v;}return{animate:animate,data:data};}function getChildClipPathToEnter(animate,child,data,enteringNodes,cb){var clipWidth=void 0;if(enteringNodes){animate=(0,_assign3.default)({},animate,{onEnd:cb});var afterClipPathWidth=animate.onEnter&&animate.onEnter.afterClipPathWidth;if(afterClipPathWidth){clipWidth=afterClipPathWidth(data,child);return{animate:animate,clipWidth:clipWidth};}}return{animate:animate};}function getChildPropsBeforeEnter(animate,child,data,enteringNodes,cb){var clipWidth=void 0;if(enteringNodes){var _ret2=function(){animate=(0,_assign3.default)({},animate,{onEnd:cb});var before=animate.onEnter&&animate.onEnter.before?animate.onEnter.before:_identity3.default;var beforeClipPathWidth=animate.onEnter&&animate.onEnter.beforeClipPathWidth;data=data.map(function(datum,idx){var key=(datum.key||idx).toString();return enteringNodes[key]?(0,_assign3.default)({},datum,before(datum)):datum;});if(beforeClipPathWidth){clipWidth=beforeClipPathWidth(data,child,enteringNodes);return{v:{animate:animate,data:data,clipWidth:clipWidth}};}}();if(typeof _ret2==="object")return _ret2.v;}return{animate:animate,data:data};}function getChildPropsOnEnter(animate,data,enteringNodes,cb){var onEnter=animate&&animate.onEnter;animate=(0,_assign3.default)({},animate,onEnter);if(enteringNodes){(function(){animate.onEnd=cb;var after=animate.onEnter&&animate.onEnter.after?animate.onEnter.after:_identity3.default;data=data.map(function(datum,idx){var key=getDatumKey(datum,idx);return enteringNodes[key]?(0,_assign3.default)({},datum,after(datum)):datum;});})();}return{animate:animate,data:data};}function getTransitionPropsFactory(props,state,setState){
var nodesWillExit=state&&state.nodesWillExit;
var nodesWillEnter=state&&state.nodesWillEnter;
var nodesShouldEnter=state&&state.nodesShouldEnter;
var nodesShouldLoad=state&&state.nodesShouldLoad;
var nodesDoneLoad=state&&state.nodesDoneLoad;
var nodesDoneClipPathLoad=state&&state.nodesDoneClipPathLoad;
var nodesDoneClipPathEnter=state&&state.nodesDoneClipPathEnter;
var nodesDoneClipPathExit=state&&state.nodesDoneClipPathExit;
var childrenTransitions=state&&state.childrenTransitions||[];
var transitionDurations={
enter:props.animate&&props.animate.onEnter&&props.animate.onEnter.duration,
exit:props.animate&&props.animate.onExit&&props.animate.onExit.duration,
load:props.animate&&props.animate.onLoad&&props.animate.onLoad.duration,
move:props.animate&&props.animate.duration};


var onLoad=function onLoad(child,data,animate){
if(nodesShouldLoad){
if(!nodesDoneClipPathLoad){
return getChildClipPathToLoad(animate,child,data,function(){
setState({nodesDoneClipPathLoad:true});
});
}
return getChildOnLoad(animate,data,function(){
setState({nodesDoneLoad:true,animating:false});
});
}

return getChildBeforeLoad(animate,child,data,function(){
setState({nodesShouldLoad:true});
});
};

var onExit=function onExit(nodes,child,data,animate){
if(nodesDoneClipPathExit===false){
return getChildClipPathToExit(animate,child,data,nodes,function(){
setState({nodesDoneClipPathExit:true});
});
}

return getChildPropsOnExit(animate,child,data,nodes,function(){
setState({nodesWillExit:false,animating:false});
});
};

var onEnter=function onEnter(nodes,child,data,animate){
if(nodesShouldEnter){
if(!nodesDoneClipPathEnter){
return getChildClipPathToEnter(animate,child,data,nodes,function(){
setState({nodesDoneClipPathEnter:true});
});
}

return getChildPropsOnEnter(animate,data,nodes,function(){
setState({nodesWillEnter:false,animating:false});
});
}

return getChildPropsBeforeEnter(animate,child,data,nodes,function(){
setState({nodesShouldEnter:true});
});
};

var getChildTransitionDuration=function getChildTransitionDuration(child,type){
var animate=child.props.animate;
var defaultTransitions=child.type&&child.type.defaultTransitions;
if(defaultTransitions){
var animationDuration=animate[type]&&animate[type].duration;
return animationDuration!==undefined?
animationDuration:defaultTransitions[type]&&defaultTransitions[type].duration;
}

return{};
};

return function getTransitionProps(child,index){
var data=getChildData(child)||[];
var animate=(0,_defaults3.default)({},props.animate,child.props.animate);

animate.onExit=(0,_defaults3.default)(
{},animate.onExit,child.type.defaultTransitions&&child.type.defaultTransitions.onExit);

animate.onEnter=(0,_defaults3.default)(
{},animate.onEnter,child.type.defaultTransitions&&child.type.defaultTransitions.onEnter);

animate.onLoad=(0,_defaults3.default)(
{},animate.onLoad,child.type.defaultTransitions&&child.type.defaultTransitions.onLoad);


var childTransitions=childrenTransitions[index]||childrenTransitions[0];
if(!nodesDoneLoad){

var load=transitionDurations.load!==undefined?
transitionDurations.load:getChildTransitionDuration(child,"onLoad");
var animation={duration:load};
return onLoad(child,data,(0,_assign3.default)({},animate,animation));
}else if(nodesWillExit){
var exitingNodes=childTransitions&&childTransitions.exiting;
var exit=transitionDurations.exit!==undefined?
transitionDurations.exit:getChildTransitionDuration(child,"onExit");

var _animation=exitingNodes?{duration:exit}:{delay:exit};
return onExit(exitingNodes,child,data,(0,_assign3.default)({},animate,_animation));
}else if(nodesWillEnter){
var enteringNodes=childTransitions&&childTransitions.entering;
var enter=transitionDurations.enter!==undefined?
transitionDurations.enter:getChildTransitionDuration(child,"onEnter");
var move=transitionDurations.move!==undefined?
transitionDurations.move:child.props.animate&&child.props.animate.duration;
var _animation2={duration:nodesShouldEnter&&enteringNodes?enter:move};
return onEnter(enteringNodes,child,data,(0,_assign3.default)({},animate,_animation2));
}else if(!state&&animate&&animate.onExit){









return getInitialChildProps(animate,data);
}

animate.onEnd=function(){setState({animating:false});};
return{animate:animate,data:data};
};
}
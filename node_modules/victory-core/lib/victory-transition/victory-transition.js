Object.defineProperty(exports,"__esModule",{value:true});var _isEqual2=require("lodash/isEqual");var _isEqual3=_interopRequireDefault(_isEqual2);var _identity2=require("lodash/identity");var _identity3=_interopRequireDefault(_identity2);var _pick2=require("lodash/pick");var _pick3=_interopRequireDefault(_pick2);var _isFunction2=require("lodash/isFunction");var _isFunction3=_interopRequireDefault(_isFunction2);var _defaults2=require("lodash/defaults");var _defaults3=_interopRequireDefault(_defaults2);var _assign2=require("lodash/assign");var _assign3=_interopRequireDefault(_assign2);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require("react");var _react2=_interopRequireDefault(_react);
var _victoryAnimation=require("../victory-animation/victory-animation");var _victoryAnimation2=_interopRequireDefault(_victoryAnimation);
var _index=require("../victory-util/index");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var


VictoryTransition=function(_React$Component){_inherits(VictoryTransition,_React$Component);








function VictoryTransition(props){_classCallCheck(this,VictoryTransition);var _this=_possibleConstructorReturn(this,(VictoryTransition.__proto__||Object.getPrototypeOf(VictoryTransition)).call(this,
props));
_this.state={
nodesShouldLoad:false,
nodesDoneLoad:false,
nodesDoneClipPathLoad:false,
animating:true};

var child=_this.props.children;
_this.continuous=child.type&&child.type.continuous;
_this.getTransitionState=_this.getTransitionState.bind(_this);return _this;
}_createClass(VictoryTransition,[{key:"componentWillReceiveProps",value:function componentWillReceiveProps(

nextProps){
this.setState(this.getTransitionState(this.props,nextProps));
}},{key:"shouldAnimateProps",value:function shouldAnimateProps(


nextProps){
return!(0,_isEqual3.default)(this.getWhitelistedProps(this.props),this.getWhitelistedProps(nextProps));
}},{key:"getWhitelistedProps",value:function getWhitelistedProps(

props){
var childProps=props.children&&props.children.props||{};
return props.animationWhitelist?(0,_pick3.default)(childProps,props.animationWhitelist):childProps;
}},{key:"shouldAnimateState",value:function shouldAnimateState(

nextProps,nextState){
var child=this.props.children;

if(child.type.role&&child.type.role==="axis"){
return false;
}
var parentState=this.getParentState(nextProps,nextState);
if(!parentState){
return this.animateState(nextState);
}

var forceLoad=parentState.animating&&!parentState.nodesDoneLoad;
return this.animateState(parentState,forceLoad);
}},{key:"getParentState",value:function getParentState(

nextProps,nextState){
var props=nextState.oldProps||this.props;
return props.animate&&props.animate.parentState||
nextProps.animate&&nextProps.animate.parentState;
}},{key:"animateState",value:function animateState(

state,forceLoad){var

nodesWillExit=

state.nodesWillExit,nodesWillEnter=state.nodesWillEnter,nodesShouldEnter=state.nodesShouldEnter,nodesShouldLoad=state.nodesShouldLoad,nodesDoneLoad=state.nodesDoneLoad,nodesDoneClipPathLoad=state.nodesDoneClipPathLoad,nodesDoneClipPathEnter=state.nodesDoneClipPathEnter,nodesDoneClipPathExit=state.nodesDoneClipPathExit,animating=state.animating;
var loading=forceLoad||!nodesDoneLoad&&(!!nodesShouldLoad||nodesDoneClipPathLoad);
var entering=nodesShouldEnter||nodesWillEnter||nodesDoneClipPathEnter;
var exiting=nodesWillExit||nodesDoneClipPathExit;
return(animating||this.state.animating)&&(loading||entering||exiting);
}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(

nextProps,nextState){
if(this.shouldAnimateState(nextProps,nextState)){
return true;
}else if(this.shouldAnimateProps(nextProps)){
return true;
}
return false;
}},{key:"componentWillUpdate",value:function componentWillUpdate(

nextProps,nextState){
if(nextState.animating!==this.state.animating&&nextState.animating===false){
var onEnd=nextProps&&nextProps.animate&&nextProps.animate.onEnd||_identity3.default;
onEnd();
}
}},{key:"componentDidMount",value:function componentDidMount()

{
if(this.transitionProps&&this.transitionProps.cb){
this.transitionProps.cb();
}
}},{key:"getTransitionState",value:function getTransitionState(

props,nextProps){var
animate=props.animate;
if(!animate){
return{};
}else if(animate.parentState){
var state=animate.parentState;
var oldProps=state.nodesWillExit&&!state.nodesDoneClipPathExit?props:null;
return{oldProps:oldProps};
}else{
var oldChildren=_react2.default.Children.toArray(props.children);
var nextChildren=_react2.default.Children.toArray(nextProps.children);var _Transitions$getIniti=











_index.Transitions.getInitialTransitionState(oldChildren,nextChildren),nodesWillExit=_Transitions$getIniti.nodesWillExit,nodesWillEnter=_Transitions$getIniti.nodesWillEnter,childrenTransitions=_Transitions$getIniti.childrenTransitions,nodesShouldEnter=_Transitions$getIniti.nodesShouldEnter,nodesShouldLoad=_Transitions$getIniti.nodesShouldLoad,nodesDoneLoad=_Transitions$getIniti.nodesDoneLoad,nodesDoneClipPathLoad=_Transitions$getIniti.nodesDoneClipPathLoad,nodesDoneClipPathEnter=_Transitions$getIniti.nodesDoneClipPathEnter,nodesDoneClipPathExit=_Transitions$getIniti.nodesDoneClipPathExit,animating=_Transitions$getIniti.animating;
var transitionState={
nodesWillExit:nodesWillExit,
nodesWillEnter:nodesWillEnter,
childrenTransitions:childrenTransitions,
nodesShouldEnter:nodesShouldEnter,
nodesShouldLoad:nodesShouldLoad||this.state.nodesShouldLoad,
nodesDoneLoad:nodesDoneLoad||this.state.nodesDoneLoad,
animating:animating||this.state.animating,
oldProps:nodesWillExit&&!nodesDoneClipPathExit?props:null};

return this.continuous?(0,_assign3.default)(
{
nodesDoneClipPathEnter:nodesDoneClipPathEnter,
nodesDoneClipPathExit:nodesDoneClipPathExit,
nodesDoneClipPathLoad:nodesDoneClipPathLoad||this.state.nodesDoneClipPathLoad},

transitionState):
transitionState;
}
}},{key:"getDomainFromChildren",value:function getDomainFromChildren(

props,axis){
var getChildDomains=function getChildDomains(children){
return children.reduce(function(memo,child){
if(child.type&&(0,_isFunction3.default)(child.type.getDomain)){
var childDomain=child.props&&child.type.getDomain(child.props,axis);
return childDomain?memo.concat(childDomain):memo;
}else if(child.props&&child.props.children){
return memo.concat(getChildDomains(_react2.default.Children.toArray(child.props.children)));
}
return memo;
},[]);
};

var child=_react2.default.Children.toArray(props.children)[0];
var childProps=child.props||{};
var domain=Array.isArray(childProps.domain)?
childProps.domain:childProps.domain&&childProps.domain[axis];
if(!childProps.children&&domain){
return domain;
}else{
var childDomains=getChildDomains([child]);
return childDomains.length===0?
[0,1]:[_index.Collection.getMinValue(childDomains),_index.Collection.getMaxValue(childDomains)];
}
}},{key:"render",value:function render()

{var _this2=this;
var props=this.state&&this.state.nodesWillExit&&!this.state.nodesDoneClipPathExit?
this.state.oldProps||this.props:this.props;
var getTransitionProps=this.props.animate&&this.props.animate.getTransitions?
this.props.animate.getTransitions:
_index.Transitions.getTransitionPropsFactory(
props,
this.state,
function(newState){return _this2.setState(newState);});

var child=_react2.default.Children.toArray(props.children)[0];
var transitionProps=getTransitionProps(child);
this.transitionProps=transitionProps;
var domain={
x:this.getDomainFromChildren(props,"x"),
y:this.getDomainFromChildren(props,"y")};

var combinedProps=(0,_defaults3.default)(
{domain:domain},transitionProps,child.props);

var animationWhitelist=props.animationWhitelist||[];
var whitelist=this.continuous?
animationWhitelist.concat(["clipWidth","clipHeight","translateX"]):animationWhitelist;
var propsToAnimate=whitelist.length?(0,_pick3.default)(combinedProps,whitelist):combinedProps;
return(
_react2.default.createElement(_victoryAnimation2.default,_extends({},combinedProps.animate,{data:propsToAnimate}),
function(newProps){
if(_this2.continuous){var
clipWidth=newProps.clipWidth,clipHeight=newProps.clipHeight,translateX=newProps.translateX,padding=newProps.padding;
var groupComponent=_react2.default.cloneElement(
child.props.groupComponent,
{clipWidth:clipWidth,clipHeight:clipHeight,translateX:translateX,padding:padding});

return _react2.default.cloneElement(
child,(0,_defaults3.default)({animate:null,groupComponent:groupComponent},newProps,combinedProps));

}
return _react2.default.cloneElement(
child,(0,_defaults3.default)({animate:null},newProps,combinedProps));

}));


}}]);return VictoryTransition;}(_react2.default.Component);VictoryTransition.displayName="VictoryTransition";VictoryTransition.propTypes={animate:_react2.default.PropTypes.object,children:_react2.default.PropTypes.node,animationWhitelist:_react2.default.PropTypes.array};exports.default=VictoryTransition;